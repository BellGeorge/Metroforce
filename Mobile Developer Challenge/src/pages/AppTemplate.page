<apex:page docType="html-5.0" cache="false" showHeader="false" sidebar="false" standardStylesheets="false" controller="AppController">
<html>
    <head>
        <title><apex:outputText value="{!$Label.AppName}" /></title>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="black" />
        <link rel="apple-touch-icon" href="{!URLFOR($Resource.AppIcon)}" />
        <script type="text/javascript" src="{!URLFOR($Resource.jQueryMin)}"></script>
        <script type="text/javascript" src="{!URLFOR($Resource.jQueryTimer)}"></script>
        <script type="text/javascript" src="{!URLFOR($Resource.iScroll, 'iscroll.js')}"></script>
        <script type="text/javascript">
            function AppHistory() {
                this.previousPages = new Array();
            
                this.addPage = function(title, address) {
                    this.previousPages.push(new Array(title, address));
                }
            
                this.getLastPageTitle = function() {
                    return this.previousPages[this.previousPages.length - 2][0];
                }
            
                this.getLastPageLink = function() {
                    return this.previousPages[this.previousPages.length - 2][1];
                }
                
                this.back = function() {
                	this.previousPages.pop();
                }
                
                this.reset = function() {
                	this.previousPages = new Array();
                }
            }
            
            // Globals
            var geoLatitude;
            var geoLongitude;
            var browserWidth;
            var browserHeight;
            var headerHeight;
            var footerHeight;
            var appHeight;
            var tileGroupPadding;
            var h2Height;
            var numberOfTileRows;
            var tileHeight;
            var myScroll;
            var appHistory;
            
            function setGlobals() {
                browserWidth = window.innerWidth;
                browserHeight = window.innerHeight;
            
                headerHeight = Math.floor(browserHeight * 0.1);
                footerHeight = Math.floor(browserHeight * 0.05);
                appHeight = Math.floor(browserHeight * 0.85);
                tileGroupPadding = 30;
            }
             
            function setAppElements() {
                h2Height = $("h2").first().height();
                numberOfTileRows = (browserHeight < 800) ? 3 : (browserHeight < 1000) ? 4 : 5;
                tileHeight = Math.floor(((appHeight - h2Height) / numberOfTileRows) - 10);
            }

            function geolocation(callback) {
                if(navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        geoLatitude = position.coords.latitude;
                        geoLongitude = position.coords.longitude;
                        callback();
                    }, geolocationErrorHandler);
                }
                else {
                    alert("geolocation not supported :(");
                }
            }

            function geolocationErrorHandler(error) {
                switch (error.code) {
                    case error.PERMISSION_DENIED:
                        alert("user did not share geolocation data");  
                    break;  
      
                    case error.POSITION_UNAVAILABLE:
                        alert("could not detect current position");  
                    break;  
      
                    case error.TIMEOUT: 
                        alert("retrieving position timed out");  
                    break;  
      
                    default: 
                        alert("unknown error");  
                    break;  
                }
            }
            
            function renderPage() {
                $("#app_header").height(headerHeight).css("margin-left", tileGroupPadding + "px").css("margin-right", tileGroupPadding + "px");
                $("#app_footer").height(footerHeight).css("margin-left", tileGroupPadding + "px").css("margin-right", tileGroupPadding + "px");
                $("#app_footer > span > p").css("line-height", footerHeight + "px");
            
                $(".tile").height(tileHeight);
                $(".large_tile").width((tileHeight * 2) + 10);
                $(".small_tile").width(tileHeight);
                $(".tile_group").css("margin-left", tileGroupPadding + "px").height(appHeight);

                var appWidth = tileGroupPadding;

				if ($(".tile_group").size() > 0) {
	                $(".tile_group").each(function(index) {
	                    var maxNumberOfCols = $(this).attr("data-max-cols");
	                    var $section = $(this).children("section");
	                    var numberOfChildRows = 0;
	                    var previousTileSmall = false;
	                    
	                    $section.children(".tile").each(function() {
	                        numberOfChildRows += (!previousTileSmall) ? 1 : 
	                            ($(this).hasClass("large_tile")) ? 1 : 0;
	                        
	                        if ($(this).hasClass("small_tile") && previousTileSmall) {
	                            previousTileSmall = false;
	                        }
	                        else if ($(this).hasClass("small_tile")) {
	                            previousTileSmall = true;
	                        }
	                        else {
	                            previousTileSmall = false;
	                        }
	                    });
	
	                    var $numberOfChildren = $section.children(".tile").size();
	                    var numberOfColumns = Math.ceil(numberOfChildRows / numberOfTileRows);
	                    
	                    var columnWidth = (tileHeight * 2) + 20;
	                    var groupWidth = columnWidth * numberOfColumns;
	                   	appWidth += (groupWidth + tileGroupPadding);
	
	                    $section.width(groupWidth).height((tileHeight + 10) * numberOfTileRows);
	                    $section.css("-moz-column-gap", 0).css("-webkit-column-gap", 0).css("column-gap", 0);
	                    $section.css({"-webkit-columns": (tileHeight * 2) + "px " + numberOfColumns});
	                });
                }
                else if ($("#map_canvas").length == 0) {
                	appWidth = browserWidth;
                	$("#content_scroller").height(appHeight);
                }
                else {
                	$("#map_canvas").height(appHeight - 10).width(browserWidth - (tileGroupPadding * 2)).css("margin", "0 " + tileGroupPadding + "px");
					initializeMap();
                }

                $("#content_scroller").width(appWidth);

                $("a").click(function(event){
                    event.preventDefault();
                    
                    if ($(this).attr("id") != "back_button_link") {
                        var childElement = $(this).find(">:first-child");
                        var originalHeight = childElement.height();
                        var originalWidth = childElement.width();
                        childElement.animate({height: (originalHeight - 10), width: (originalWidth - 10)}, function() {
                            childElement.animate({height: (originalHeight), width: (originalWidth)});
                        });
                    }
                    
                    var link = $(this).attr("href");
                    var pageTitle = $(this).attr("data-page-title");
                    var backButton = $(this).attr("data-back-button");

                    $("#app_content").fadeOut(800, function() {
                        $("#app_content").load(link, {latitude: geoLatitude, longitude: geoLongitude}, function() {
                            $("#page_title").html(pageTitle);
                            if (backButton == "true") {
                                if (pageTitle == "{!$Label.AppName}") {
                                    appHistory.reset();
                                    appHistory.addPage(pageTitle, link);
                                    $("#back_button").hide();
                                }
                                else {
                                    appHistory.back();
                                    $("#back_button").show();
                                    $("#back_button_link").attr("href", appHistory.getLastPageLink());
                                    $("#back_button_link").attr("data-page-title", appHistory.getLastPageTitle());
                                }
                            }
                            else {
                                if (pageTitle == "{!$Label.AppName}") {
                                    $("#back_button").hide();
                                    appHistory.reset();
                                    appHistory.addPage(pageTitle, link);
                                }
                            else {
                                    appHistory.addPage(pageTitle, link);
                                    $("#back_button").show();
                                    $("#back_button_link").attr("href", appHistory.getLastPageLink());
                                    $("#back_button_link").attr("data-page-title", appHistory.getLastPageTitle());
                                }
                            }

                            renderPage();
                            $("#app_content").fadeIn(800, function() {                                  
                                var myScroll = new iScroll("app_content", { bounce:false, useTransition:true});
                            });
                        });
                    });
                });
            }
          

            $(document).ready(function() {
                appHistory = new AppHistory();
                appHistory.addPage("{!$Label.AppName}","{!URLFOR($Page.AppHome)}");
                $("#back_button").hide();
                setGlobals();
                geolocation(function() {
                    $("#app_content").load("{!URLFOR($Page.AppHome)}", {latitude: geoLatitude, longitude: geoLongitude}, function() {
                        setAppElements();
                        renderPage();
                        
                        $("#app_content").fadeIn(800, function() {                                  
                            var myScroll = new iScroll("app_content", { bounce:false, useTransition:true});
                        });
                    });
                    document.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);
                    window.onorientationchange = detectIPadOrientation; 
                });
            });
            
            function detectIPadOrientation() {
            	setGlobals();
            	setAppElements();
            	renderPage(); 
            }
            
            var map;
            function initializeMap() {
            	var geocoder = new google.maps.Geocoder();
            	var myGeolocation = new google.maps.LatLng(geoLatitude, geoLongitude);
				var myOptions = {
					center: myGeolocation,
					zoom: 11,
					mapTypeId: google.maps.MapTypeId.ROADMAP
				};
				map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
				
				// Create our "tiny" marker icon
				var blueIcon = "http://www.google.com/intl/en_us/mapfiles/ms/micons/blue-dot.png";

				var marker = new google.maps.Marker({
					position: myGeolocation,
					map: map,
					title:"My Current Position",
					icon: blueIcon
				});
				
				var radiusOptions = {
					strokeColor: "#1898C1",
					strokeOpacity: 0.6,
					strokeWeight: 2,
					fillColor: "#61CAFD",
					fillOpacity: 0.20,
					map: map,
					center: myGeolocation,
					radius: (1610 * 10)
				};
				cityCircle = new google.maps.Circle(radiusOptions);
				
				var geoMarkers = $("geoMarker");
				geoMarkers.each(function() {
					var postcode = $(this).attr("data-postcode");
					var title = $(this).attr("data-title");
					var objectType = $(this).attr("data-object-type");
					var address = $(this).attr("data-address");
					var contactDetails = $(this).attr("data-contact-details");
					
					geocoder.geocode( { 'address': postcode}, function(results, status) {
				      if (status == google.maps.GeocoderStatus.OK) {
				        var marker = new google.maps.Marker({
				            map: map,
				            position: results[0].geometry.location,
				            title: title
				        });
				        
				        var infoWindow = new google.maps.InfoWindow();
				        infoWindow.setContent('<p>' + objectType + '</p><p style="font-weight: bold;">' + title + '</p>'
				        	+ '<p>' + address + '</p><p>' + contactDetails + '</p>');
				        google.maps.event.addListener(marker, 'click', openInfoWindow(infoWindow, marker));
				      } else {
				        //	alert("Geocode was not successful for the following reason: " + status);
				      }
				    });
				});
			}
			
			function openInfoWindow(infoWindow, marker) {
				return function() {
		        	infoWindow.open(map, marker);
	        	}
			}

        </script>
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=true"></script>
        <apex:insert name="javascript" />
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Page.AppCSSBasic)}" />
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Page.AppCSSMetro)}" />
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Page.AppCSSThemeGreen)}" />
    </head>
    <body>
        <div id="app_wrapper">
            <header id="app_header">
                <apex:insert name="header">
                    <c:AppHeader />
                </apex:insert>
            </header>
            <section id="app_content" class="clear">
                <apex:insert name="content" />
            </section>
            <footer id="app_footer" class="clear">
                <apex:insert name="footer">
                    <c:AppFooter />
                </apex:insert>
            </footer>
        </div>
    </body>
</html>
</apex:page>